name: Sonic Mania Builder

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag Name'
        required: true
        default: 'v1.0.0'
      package_name:
        description: 'Package Name'
        required: true
        default: 'RSDKv5'

jobs:
  build:
    runs-on: windows-2022

    env:
      SolutionPath: RSDKv5.sln
      Platform: x64
      Configuration: Release
      BuildMode: SideLoadOnly
      AppxBundle: Never
      ProjectPath: RSDKv5/RSDKv5.UWP.vcxproj
      ProjectDirectory: .\RSDKv5
      PackageOutputRootDir: C:\AppPackage
      PackageOutputDir: RSDKv5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
      
      - name: Install Windows 8.1 SDK
        run: |
          choco install visualstudio2019buildtools -y
          choco install visualstudio2019-workload-vctools -y
          choco install windows-sdk-8.1 -y

      - name: Download and Setup Dependencies
        run: |
          # Download libogg
          Invoke-WebRequest -Uri "https://downloads.xiph.org/releases/ogg/libogg-1.3.5.zip" -OutFile "libogg.zip"
          Expand-Archive -Path libogg.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/libogg-1.3.5 libogg
          # Build libogg
          cd ./dependencies/windows/libogg/win32/VS2015
          msbuild libogg.sln /p:Configuration=Release /p:PlatformToolset=v143 /p:WindowsTargetPlatformVersion=8.1
          cd ../../../../..

          # Download libvorbis
          Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/vorbis/libvorbis-1.3.7.zip" -OutFile "libvorbis.zip"
          Expand-Archive -Path libvorbis.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/libvorbis-1.3.7 libvorbis
          # Build libvorbis
          cd ./dependencies/windows/libvorbis/win32/VS2010
          msbuild libvorbis.sln /p:Configuration=Release /p:PlatformToolset=v143 /p:WindowsTargetPlatformVersion=8.1
          cd ../../../../..

          # Download libtheora
          Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/theora/libtheora-1.1.1.zip" -OutFile "libtheora.zip"
          Expand-Archive -Path libtheora.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/libtheora-1.1.1 libtheora
          # Build libtheora
          cd ./dependencies/windows/libtheora/win32/VS2008
          msbuild libtheora_static.sln /p:Configuration=Release /p:PlatformToolset=v143 /p:WindowsTargetPlatformVersion=8.1
          cd ../../../../..

      - name: Download GLEW
        run: |
          Invoke-WebRequest -Uri "https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0-win32.zip" -OutFile "GLEW.zip"
          Expand-Archive -Path GLEW.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/glew-2.2.0 glew

      - name: Download SDL2
        run: |
          Invoke-WebRequest -Uri "https://libsdl.org/release/SDL2-devel-2.28.5-VC.zip" -OutFile "SDL2.zip"
          Expand-Archive -Path SDL2.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/SDL2-2.28.5 SDL2

      - name: Download Game.dll from Google Drive
        run: |
          Invoke-WebRequest -Uri "https://drive.google.com/uc?export=download&id=1SZ-T1hrD9mYmnVNq8kxThS2RU1gCm-Sb" -OutFile "Game.dll"
          New-Item -ItemType Directory -Force -Path "D:\a\RSDKv5-Decompilation\Sonic-Mania-Decompilation\build\x64\Release\Game"
          Move-Item -Path "Game.dll" -Destination "D:\a\RSDKv5-Decompilation\Sonic-Mania-Decompilation\build\x64\Release\Game\Game.dll"
        shell: pwsh

      - name: Download ManiaTouchControls.dll from Google Drive
        run: |
          Invoke-WebRequest -Uri "https://drive.google.com/uc?export=download&id=1Sh-qQXAoYwEMKotbjSMRv7JmPuDVHIgp" -OutFile "ManiaTouchControls.dll"
          New-Item -ItemType Directory -Force -Path "D:\a\RSDKv5-Decompilation\RSDKv5-Example-Mods\ManiaTouchControls\build\x64\Release"
          Move-Item -Path "ManiaTouchControls.dll" -Destination "D:\a\RSDKv5-Decompilation\RSDKv5-Example-Mods\ManiaTouchControls\build\x64\Release\ManiaTouchControls.dll"
        shell: pwsh

      - name: Generate Self-Signed Certificate
        id: generate_cert
        run: |
          $cert = New-SelfSignedCertificate -CertStoreLocation "Cert:\CurrentUser\My" -Subject "CN=MyUWPCert" -KeyAlgorithm RSA -KeyLength 2048 -Provider "Microsoft Enhanced RSA and AES Cryptographic Provider" -KeyExportPolicy Exportable -NotAfter (Get-Date).AddYears(1) -Type CodeSigningCert
          echo "THUMBPRINT=$($cert.Thumbprint)" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Set Package Name
        id: set_package_name
        run: |
          echo "PACKAGE_NAME=${{ github.event.inputs.package_name }}_${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV

      - name: App Build
        run: |
          msbuild $env:SolutionPath -target:RSDKv5-UWP `
            /p:Platform=$env:Platform `
            /p:Configuration=$env:Configuration `
            /p:UapAppxPackageBuildMode=$env:BuildMode `
            /p:AppxBundle=$env:AppxBundle `
            /p:PlatformToolset=v143 `
            /p:WindowsTargetPlatformVersion=8.1 `
            /p:PackageCertificateThumbprint="${{ env.THUMBPRINT }}" `
            /p:AppxPackageTestDir="${{ env.PackageOutputRootDir }}\${{ env.PACKAGE_NAME }}" `
            /p:ForceImportBeforeCppTargets="$env:GITHUB_WORKSPACE/props/winactions_x64.props" `
            /p:RestorePackagesConfig=true `
            /restore
        shell: pwsh

      - name: Prepare artifacts
        run: |
          mkdir DECOMP
          copy TEMP/Sonic-Mania-Decompilation/build/dependencies/RSDKv5/Release/RSDKv5u.exe DECOMP/
          copy TEMP/Sonic-Mania-Decompilation/build/dependencies/RSDKv5/Release/Game.dll DECOMP/
          # Assume Data.rsdk or Data folder is already present in the repository or acquired elsewhere
          # copy path/to/Data.rsdk DECOMP/ OR copy path/to/Data DECOMP/

      - name: Zip artifacts
        run: powershell Compress-Archive -Path DECOMP/* -DestinationPath DECOMP.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: sonic-mania-decompilation
          path: DECOMP.zip
